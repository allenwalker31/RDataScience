Reading Large table 
	colClasses = <data_type>, this will help run faster then leave R figure data_type out
	calculate memory requirement.

Textual Data Format.
	dput() and dump(): 
	Unlike
	Texture
	dput R obj:
			> y <- data.frame(a = 1, b = "a")
			> dput(y)			
			> dput(y, file = "y.R")
			> new.y <- dget("y.R")
			> new.y
	Dump R obj
			> x <- "foo"
			> y <- data.frame(a = 1, b = "a")
			> dump(c("x", "y"), file = "data.R")
			> rm(x, y)
			> source("data.R")
			> y
			> x

Connections: Interfaces to the Outside World
	file, opens a connection to a file
	gzfile, opens a connection to a file compressed with gzip
	bzfile, opens a connection to a file compressed with bzip2
	url, opens a connection to a webpage

Subsetting 
	There are a number of operators that can be used to extract subsets of R objects.
	[ always returns an object of the same class as the original; can be used to select more than one
		element (there is one exception)
	[[ is used to extract elements of a list or a data frame; it can only be used to extract a single
		element and the class of the returned object will not necessarily be a list or data frame
	$ is used to extract elements of a list or data frame by name; semantics are similar to that of [[.
	
	Ex:
		> x <- c("a", "b", "c", "c", "d", "a")
		> x[1]
		[1] "a"
		> x[2]
		[1] "b"
		> x[1:4]
		[1] "a" "b" "c" "c"
		> x[x > "a"]
		[1] "b" "c" "c" "d"
		> u <- x > "a"
		> u
		[1] FALSE TRUE TRUE TRUE TRUE FALSE
		> x[u]
		[1] "b" "c" "c" "d"
		
	List
		> x <- list(foo = 1:4, bar = 0.6)
		> x[1]
		> x[[1]]
		> x$bar
		> x[["bar"]]
		> x["bar"]
		
		> x <- list(foo = 1:4, bar = 0.6, baz = "hello")
		> x[c(1, 3)]
		
		> x <- list(foo = 1:4, bar = 0.6, baz = "hello")
		> name <- "foo"
		> x[[name]] ## computed index for ‘foo’
		> x$name ## element ‘name’ doesn’t exist!
		> x$foo
		
		> x <- list(a = list(10, 12, 14), b = c(3.14, 2.81))
		> x[[c(1, 3)]]
		> x[[1]][[3]]
		> x[[c(2, 1)]]
	Matrix
		> x <- matrix(1:6, 2, 3)
		> x[1, 2]
		> x[2, 1]
		
		> x[1, ]
		> x[, 2]
		
		> x <- matrix(1:6, 2, 3)
		> x[1, 2
		> x[1, 2, drop = FALSE]
		
		> x <- matrix(1:6, 2, 3)
		> x[1, 
		> x[1, , drop = FALSE]
	Partial Matching
		> x <- list(aardvark = 1:5)
		> x$a
		> x[["a"]]
		> x[["a", exact = FALSE]]
		
	Removing Missing Values
		> x <- c(1, 2, NA, 4, NA, 5)
		> bad <- is.na(x)
		> x[!bad]
	
		> x <- c(1, 2, NA, 4, NA, 5)
		> y <- c("a", "b", NA, "d", NA, "f")
		> good <- complete.cases(x, y)
		> good
		> x[good]
		> y[good]
		
		> airquality[1:6, ]
		 Ozone Solar.R Wind Temp Month Day
		1 41 190 7.4 67 5 1
		2 36 118 8.0 72 5 2
		3 12 149 12.6 74 5 3
		4 18 313 11.5 62 5 4
		5 NA NA 14.3 56 5 5
		6 28 NA 14.9 66 5 6
		> good <- complete.cases(airquality)
		> airquality[good, ][1:6, ]
		 Ozone Solar.R Wind Temp Month Day
		1 41 190 7.4 67 5 1
		2 36 118 8.0 72 5 2
		3 12 149 12.6 74 5 3
		4 18 313 11.5 62 5 4
		7 23 299 8.6 65 5 7
		
		
Vectorized Operations
		> x <- 1:4; y <- 6:9
		> x + y
		> x > 2
		> x >= 2
		> y == 8
		> x * y
		> x / y
		
		> x <- matrix(1:4, 2, 2); y <- matrix(rep(10, 4), 2, 2)
		> x * y ## element-wise multiplication
		> x / y
		> x %*% y ## true matrix multiplication